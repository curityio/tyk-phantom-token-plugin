# syntax=docker/dockerfile:1

FROM --platform=$BUILDPLATFORM golang:1.23.3-alpine AS builder
WORKDIR /src

# module cache
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    echo "warming cache"

COPY go.mod go.sum ./
RUN --mount=type=cache,target=/go/pkg/mod go mod download

COPY main.go ./
COPY proto/ proto/

RUN set -eux; \
    apk add --no-cache protobuf git build-base; \
    go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.36.6; \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.4.0; \
    mkdir -p internal/coprocess; \
    PATH=$PATH:/go/bin \
    protoc -Iproto \
      --go_out=internal/coprocess --go_opt=paths=source_relative \
      --go-grpc_out=internal/coprocess --go-grpc_opt=paths=source_relative \
      proto/*.proto

ARG TARGETOS TARGETARCH
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    go build -trimpath -ldflags="-s -w" -o /out/phantom-plugin ./main.go

FROM gcr.io/distroless/static-debian12:nonroot
ENV PORT=50051
EXPOSE 50051
USER nonroot:nonroot
COPY --from=builder /out/phantom-plugin /phantom-plugin
ENTRYPOINT ["/phantom-plugin"]
